ARG DEBIAN_VERSION=bullseye

FROM debian:$DEBIAN_VERSION-slim

ARG RUST_STABLE_VERSION="1.72.0"

# Set environment variables
ENV SHELL="/bin/bash"
ENV DEBIAN_FRONTEND="noninteractive"

ENV RUSTUP_HOME="/opt/rustup_home"
ENV CARGO_HOME="/opt/cargo_home"
ENV CARGO_TARGET_DIR="/opt/cargo_target"
ENV PATH="$PATH:$CARGO_HOME/bin"

ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER="aarch64-linux-gnu-gcc"
ENV CC_aarch64_unknown_linux_gnu="aarch64-linux-gnu-gcc"
ENV CXX_aarch64_unknown_linux_gnu="aarch64-linux-gnu-g++"
ENV BINDGEN_EXTRA_CLANG_ARGS=-"-sysroot /usr/aarch64-linux-gnu"

ENV SKIP_WASM_BUILD=1
ENV RUST_BACKTRACE=1

# Install dependencies
RUN set -eux && \
    apt-get -y update && \
    apt-get install --no-install-recommends -y \
        # tools
        curl ca-certificates git bash sudo nano gh \
        # compilers
        build-essential libclang-dev \
        # dependencies
        protobuf-compiler \
        # cross compiler
        g++-aarch64-linux-gnu libc6-dev-arm64-cross && \
    rm -rf /var/lib/apt/lists/*

RUN useradd rust --create-home -u 1000 --groups sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
RUN mkdir ${RUSTUP_HOME} ${CARGO_HOME} ${CARGO_TARGET_DIR}
run chown -R rust:rust ${RUSTUP_HOME} ${CARGO_HOME} ${CARGO_TARGET_DIR}
USER rust
# Install rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain ${RUST_STABLE_VERSION} && \
    rustup target add aarch64-unknown-linux-gnu --toolchain ${RUST_STABLE_VERSION}
WORKDIR /home/rust

ENTRYPOINT ["/bin/bash"]

