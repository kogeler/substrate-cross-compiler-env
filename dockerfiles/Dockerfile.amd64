ARG DEBIAN_VERSION=bullseye

FROM debian:${DEBIAN_VERSION}-slim

ARG DEBIAN_VERSION=bullseye
ARG RUST_STABLE_VERSION="1.78.0"
ARG CLANG_VERSION="17"

# Set environment variables
ENV SHELL="/bin/bash"
ENV DEBIAN_FRONTEND="noninteractive"

ENV RUSTUP_HOME="/opt/rustup_home"
ENV CARGO_HOME="/opt/cargo_home"
ENV CARGO_TARGET_DIR="/opt/cargo_target"
ENV PATH="$PATH:$CARGO_HOME/bin"

ENV CC="clang-$CLANG_VERSION"
ENV CXX="clang-$CLANG_VERSION"

ENV RUST_BACKTRACE=1

# Install dependencies
RUN set -eux && \
    apt-get -y update && \
    apt-get install --no-install-recommends -y curl ca-certificates apt-transport-https && \
    curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc && \
    echo "deb https://apt.llvm.org/${DEBIAN_VERSION}/ llvm-toolchain-${DEBIAN_VERSION}-$CLANG_VERSION main" >> /etc/apt/sources.list.d/llvm-toolchain-${DEBIAN_VERSION}-$CLANG_VERSION.list && \
    echo "deb https://deb.debian.org/debian ${DEBIAN_VERSION}-backports main" >> /etc/apt/sources.list.d/${DEBIAN_VERSION}-backports.list && \
    apt-get -y update && \
    apt-get install --no-install-recommends -y \
        # tools
        git bash sudo nano gh \
        # compilers
        clang-$CLANG_VERSION lldb-$CLANG_VERSION lld-$CLANG_VERSION libclang-$CLANG_VERSION-dev make \
        # dependencies
        protobuf-compiler && \
    update-alternatives --install /usr/bin/cc cc /usr/bin/clang-$CLANG_VERSION 100 && \
    update-alternatives --install /usr/bin/ld ld /usr/bin/ld.lld-$CLANG_VERSION 100 && \
    rm -rf /var/lib/apt/lists/*

RUN useradd rust --create-home -u 1000 --groups sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
RUN mkdir ${RUSTUP_HOME} ${CARGO_HOME} ${CARGO_TARGET_DIR}
run chown -R rust:rust ${RUSTUP_HOME} ${CARGO_HOME} ${CARGO_TARGET_DIR}
USER rust
# Install rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain ${RUST_STABLE_VERSION} && \
    rustup component add rust-src --toolchain ${RUST_STABLE_VERSION}-x86_64-unknown-linux-gnu && \
    rustup target add wasm32-unknown-unknown --toolchain ${RUST_STABLE_VERSION}
RUN command -v wasm-gc || \
    cargo +${RUST_STABLE_VERSION} install --git https://github.com/alexcrichton/wasm-gc --force
WORKDIR /home/rust

ENTRYPOINT ["/bin/bash"]